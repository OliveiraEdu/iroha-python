
from .....rust import make_enum, make_struct, make_tuple, get_class, SelfResolvingTypeVar, Dict
import typing
            
Event = make_enum("Event", [("Peer", get_class("iroha_data_model.events.data.events.peer.PeerEvent")), ("Domain", get_class("iroha_data_model.events.data.events.domain.DomainEvent")), ("Account", get_class("iroha_data_model.events.data.events.account.AccountEvent")), ("AssetDefinition", get_class("iroha_data_model.events.data.events.asset.AssetDefinitionEvent")), ("Asset", get_class("iroha_data_model.events.data.events.asset.AssetEvent")), ("Trigger", get_class("iroha_data_model.events.data.events.trigger.TriggerEvent")), ("Role", get_class("iroha_data_model.events.data.events.role.RoleEvent")), ("PermissionToken", get_class("iroha_data_model.events.data.events.permission.PermissionTokenEvent")), ("PermissionValidator", get_class("iroha_data_model.events.data.events.permission.PermissionValidatorEvent"))], typing.Union[get_class("iroha_data_model.events.data.events.peer.PeerEvent"), get_class("iroha_data_model.events.data.events.domain.DomainEvent"), get_class("iroha_data_model.events.data.events.account.AccountEvent"), get_class("iroha_data_model.events.data.events.asset.AssetDefinitionEvent"), get_class("iroha_data_model.events.data.events.asset.AssetEvent"), get_class("iroha_data_model.events.data.events.trigger.TriggerEvent"), get_class("iroha_data_model.events.data.events.role.RoleEvent"), get_class("iroha_data_model.events.data.events.permission.PermissionTokenEvent"), get_class("iroha_data_model.events.data.events.permission.PermissionValidatorEvent")])

SelfResolvingTypeVar.resolve_all()
